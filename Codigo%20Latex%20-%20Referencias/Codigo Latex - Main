% PLANTILLA APA7
% Creado por: Isaac Palma Medina
% Última actualización: 25/07/2021
% @COPYLEFT

% Fuentes consultadas (todos los derechos reservados):  
% Normas APA. (2019). Guía Normas APA. https://normas-apa.org/wp-content/uploads/Guia-Normas-APA-7ma-edicion.pdf
% Tecnológico de Costa Rica [Richmond]. (2020, 16 abril). LaTeX desde cero con Overleaf (1 de 3) [Vídeo]. YouTube. https://www.youtube.com/watch?v=kM1KvHVuaTY Weiss, D. (2021). 
% Formatting documents in APA style (7th Edition) with the apa7 LATEX class. https://ctan.math.washington.edu/tex-archive/macros/latex/contrib/apa7/apa7.pdf @COPYLEFT

%+-+-+-+-++-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+

% Preámbulo
\documentclass[stu, 12pt, letterpaper, donotrepeattitle, floatsintext, natbib]{apa7}
\usepackage[utf8]{inputenc}
\usepackage{comment}
\usepackage{marvosym}
\usepackage{graphicx}
\usepackage{float}
\usepackage{tikz}
\usepackage{amsmath}
\usepackage[normalem]{ulem}
\usepackage[spanish]{babel} 
\selectlanguage{spanish}
\useunder{\uline}{\ul}{}
\newcommand{\myparagraph}[1]{\paragraph{#1}\mbox{}\\}

% Portada
\thispagestyle{empty}
\title{\Large Autómata finito y gramática libre de contexto aplicada a los elementos químicos (configuración electrónica)}
\author{Luyo Valverde Carlos Javier \\Rios Vito Daniela Paola \\Yarrow Larrauri Nicholas} % (autores separados, consultar al docente)
% Manera oficial de colocar los autores:
%\author{Autor(a) I, Autor(a) II, Autor(a) III, Autor(a) X}
\affiliation{Universidad San Ignacio de Loyola}
\course{Código del curso: Teoría de Computación}
\professor{Rodriguez Urquiaga, Roberto Josue}
\duedate{2023}
\begin{document}
\maketitle


% Índices
\pagenumbering{roman}
    % Contenido
\renewcommand\contentsname{\largeÍndice}
\tableofcontents
\setcounter{tocdepth}{2}
\newpage

% Cuerpo
\pagenumbering{arabic}

\section{\large Introducción}
\noindent \maskCitet{}\\
Los autómatas finitos son modelos computacionales que realizan procesos para entregar una salida tras recibir una entrada y está definido por un alfabeto, conjunto de estados finitos, transiciones, un estado inicial y un estado final. Por otro lado, las gramáticas libres de contexto es una gramática formal y resulta útil en diversas aplicaciones debido a que pueden describir características con estructuras recursivas.
\\
Ambos cuentan con múltiples aplicaciones que se encuentran habitualmente en nuestra vida cotidiana. Se aplica cuando se quiere conocer la ruta más corta a un destino, al jugar un videojuego, en la biología, redes de comunicación, etc. En este sentido, el presente trabajo relaciona los autómatas finitos y las gramáticas libres de contexto aplicada a los elementos químicos, específicamente, su configuración electrónica.
\\
En el campo de la química se encuentran los muy bien conocidos “elementos químicos” y cada uno de estos a su vez cuentan con sus respectivas configuraciones electrónicas únicas. Dicha configuración permite saber cómo están distribuidos los electrones de un átomo de un elemento alrededor del núcleo, de manera que se sabe los electrones que tienen los átomos en cada una de sus órbitas. Esto resulta imprescindible para hacer enlaces covalentes y enlaces iónicos, además conocer los electrones de valencia.
\\
En este proyecto no se pretende abarcar profundamente cómo se establecen estas configuraciones electrónicas. Lo que se busca es hacer más fácil y práctico para un estudiante de química, o cualquier otra persona interesada, conocer qué elemento está relacionado con determinada configuración, o mejor dicho, a qué elemento le pertenece una configuración requerida. Adicionalmente, brindar su configuración simplificada, la cual se da apuntando al gas noble anterior más cercano al elemento y después se agregan las capas finales del átomo.

\newpage

\section{\large Marco Teórico}
\noindent \maskCitet{}\\


\subsection{\textbf{Autómatas Finitos}}
Los autómatas finitos son máquinas abstractas, es decir, modelos teóricos y conceptuales utilizados en la informática y la teoría de la computación para describir el comportamiento de sistemas en términos de procesamiento de símbolos \cite{Brookshear1993}
). La definición formal de un autómata finito es una tupla $(Q, \Sigma, \delta, q_0, F)$, donde: 
\begin{itemize}
\item $Q$: Un conjunto finito de estados.
\item $\Sigma$: Un conjunto finito de símbolos, llamado alfabeto de entrada.
\item $\delta$: Una función de transición: $\delta: Q \times \Sigma \to Q$.
\item $q_0$: El estado inicial.
\item $F$: Un conjunto de estados finales.
\end{itemize}

Por ejemplo, consideremos un autómata que acepta el lenguaje de cadenas binarias que terminan con "01". Los componentes de este autómata son:
\begin{align*}
Q &= \{q_0, q_1, q_2\} \\
\Sigma &= \{0, 1\} \\
\delta &= \{(q_0, 0) \to q_0, (q_0, 1) \to q_1, (q_1, 0) \to q_0, (q_1, 1) \to q_2, (q_2, 0) \to q_0, (q_2, 1) \to q_1\} \\
q_0 &= q_0 \\
F &= \{q_1\}
\end{align*}

Además, los autómatas finitos pueden ser clasificados de 2 formas: autómatas finitos deterministas (AFD) y autómatas finitos no deterministas (AFND).

Los AFD poseen una transacción única establecida por cada par de estados y símbolos dentro de su alfabeto. En otras palabras, dado un estado y un símbolo, el autómata tendra la capacidad de saber a que estado específico debe transaccionar.
En cambio, los AFND tienen la flexibilidad de poseer múltiples cantidad de  transacciones posibles desde un estado dado cierto símbolo de entrada. Dando consigo la posibilidad de poder estar en varios estados al mismo tiempo(.
\subsection{\textbf{Gramáticas Libres de Contexto}}
Las Gramáticas Libres de Contexto (GLC) son una parte esencial en la teoría de la computación. Se utilizan para describir y definir lenguajes formales. Similar a los autómatas, una GLC puede ser representada por una tupla: \[ G = (V, \Sigma, P, S) \]
Donde:
\begin{itemize}
\item $V$: Un conjunto finito de variables o símbolos no terminales.
\item $\Sigma$: Un conjunto finito de símbolos terminales o el alfabeto del lenguaje.
\item $P$: Es un conjunto finito de reglas de producción que especifican cómo se pueden combinar los símbolos no terminales y terminales para formar cadenas o secuencias válidas en el lenguaje.de $A \rightarrow \alpha$, donde $A$ es una variable y $\alpha$ es una cadena de símbolos terminales y no terminales.
\item $S$: El símbolo inicial que pertenece a $V$, representa el punto de inicio para generar las cadenas del lenguaje.
\end{itemize}
La siguiente es una Gramática Libre de Contexto (GLC) que genera el lenguaje de todas las cadenas que consisten en una secuencia de 'a's seguida de una secuencia de 'b's:

\[
G = (\{S\}, \{a, b\}, P, S)
\]
Donde:
\begin{itemize}
\item \(\{S\}\) es el conjunto de variables o símbolos no terminales. En este caso, solo tenemos una variable, \(S\).
\item \(\{a, b\}\) es el conjunto de símbolos terminales o el alfabeto del lenguaje. Aquí, tenemos dos símbolos terminales, "a" y "b".
\item \(P\) es el conjunto de reglas de producción que especifican cómo se pueden combinar los símbolos no terminales y terminales. En este caso, las reglas son:
\end{itemize}

  \[
  \begin{align*}
  S &\rightarrow aS \\
  S &\rightarrow bS \\
  S &\rightarrow \varepsilon
  \end{align*}
  \]
  Estas reglas indican que podemos generar una cadena comenzando con \(S\) y reemplazando \(S\) por 'aS' o 'bS' repetidamente, o simplemente dejar \(S\) como \(\varepsilon\) (cadena vacía).
\begin{itemize}
\item \(S\) es el símbolo inicial que representa el punto de inicio para generar las cadenas del lenguaje.
\end{itemize}
Con esta GLC, se pueden generar cadenas como 'aabb', 'aaabbb', 'ab', 'aabbb', etc., que consisten en secuencias de 'a's seguidas de secuencias de 'b'

\subsection{\textbf{Configuración Electrónica}}
La configuración electrónica es la forma de distribuir el número de electrones  correspondientes a un elemento químico en distintos niveles y sub-niveles de energía alrededor de su núcleo atómico \cite{Brown2004quimica}. Los electrones se organizan en capas o niveles de energía, y dentro de cada nivel, hay subniveles que pueden contener un número máximo de electrones.
Los electrones llenan los diferentes niveles de energía en un orden creciente de energía, iniciando desde el nivel más cercano al núcleo del átomo. Para que un nivel sea llenado, primero deben completarse los subniveles correspondientes, siguiendo la misma jerarquía.
\begin{table}
\caption{Niveles y Subniveles de Energía en la Configuración Electrónica.}
    \centering
    \begin{threeparttable}
        \begin{tabular}{@{}cccc@{}}
            \toprule
            \textbf{Nivel de Energía} & \textbf{Subniveles} & \textbf{Máxima Cantidad de Electrones} \\ \midrule
            K                         & s                   & 2                                      \\
            L                         & s, p                & 8                                      \\
            M                         & s, p, d             & 18                                     \\
            N                         & s, p, d, f          & 32                                     \\
            O                         & s, p, d, f          & 32                                     \\
            P                         & s, p, d             & 18                                     \\
            Q                         & s, p                & 8                                  \\ \bottomrule
        \end{tabular}
    \end{threeparttable}
\end{table}
\newpage

Para entender mejor la configuración electrónica, consideremos los siguientes ejemplos:
    \subsection*{Ejemplo 1: Configuración Electrónica del Carbono (C, número atómico 6}

    La configuración electrónica del carbono es 1s² 2s² 2p². Esto significa que tiene:
    \begin{itemize}
    \item Nivel de Energía K: $1s^2$ (2 electrones)
    \item Nivel de Energía L: $2s^2$ (2 electrones) y $2p^2$ (2 electrones)
    \end{itemize}
    Esto indica que el carbono tiene 6 electrones distribuidos en sus niveles y subniveles de energía.
    
        \subsection*{Ejemplo 2: Configuración Electrónica del Oxígeno (O, número atómico 8)}
    
    La configuración electrónica del oxígeno es $1s^2 2s^2 2p^4.$ Esto significa que tiene:
    \begin{itemize}
    \item Nivel de Energía K: $1s^2$ (2 electrones)
    \item Nivel de Energía L: $2s^2$ (2 electrones) y $2p^4$ (4 electrones)
    \end{itemize}
    Esto indica que el oxígeno tiene 8 electrones distribuidos en sus niveles y subniveles de energía.
    





\newpage

\section{\large Trabajos Relacionados}
\noindent \maskCitet{Fumiyasu}\\
\subparagraph{Recognition of Condensed Structural Formulas of Chemical Compounds Using a Formal Grammar}
En este artículo, se propone un método para reconocer fórmulas estructurales condensadas de compuestos químicos utilizando una gramática formal.\\
\noindent \maskCitet{Matyszczak2019}\\
\subparagraph{Grammars of Organic Chemistry}
Se propone y discute el alfabeto del lenguaje de todos los compuestos orgánicos, además, se presenta un sistema de notación que permite escribir determinado compuesto orgánico como una cadena. Se construyen autómatas deterministas de estados finitos para decidir si el compuesto orgánico puede ser sintetizado en la reacción de esterificación.\\
\noindent \maskCitet{Yoshikawa2018}\\
\subparagraph{Population-based De Novo Molecule Generation, Using Grammatical Evolution}
En este trabajo, se propone un nuevo generador de moléculas eficiente (ChemGE) para generar múltiples moléculas novedosas aprovechando la computación paralela. ChemGE usa un enfoque de evolución gramatical que es una técnica de optimización basada en poblaciones para optimizar una población de cadenas que siguen una gramática libre de contexto.\\
\noindent \maskCitet{Qura-Tul-Ein2014}\\
\subparagraph{DNA Pattern Analysis using Finite Automata}
Este artículo utiliza NFA y DFA para analizar el patrón de ADN. El ácido desoxirribonucleico (ADN) está presente en todos los organismos vivos. Hay ciertas secuencias en el ADN que afectan ciertas funciones y cualquier cambio en la secuencia puede cambiar la funcionalidad, lo que puede causar anormalidades en el organismo.\\
\noindent \maskCitet{Hayashida2018}\\
\subparagraph{Grammar-based Compression for Directed and Undirected Generalized Series-parallel Graphs using Integer Linear Programming}
Se aborda el problema de encontrar reglas de generación a partir de datos biológicos, representados como gráficos en series paralelas generalizadas (GSPG) dirigidos y no dirigidos, que incluyen árboles, gráficos planos externos y gráficos en series paralelas. En este estudio, se propone gramáticas que representan GSPG con etiquetas de borde basadas en gramáticas libres de contexto.\\

\newpage

\section{\large Metodología}
\noindent \maskCitet{}\\

\subsection{\textbf{Diseño del estudio}}
En este proyecto se relacionarán los autómatas finitos y las gramáticas libres de contexto aplicadas a los elementos químicos, específicamente, su configuración electrónica. Para ello, se diseñará un programa que permita al usuario ingresar una configuración electrónica y obtener el elemento químico correspondiente, así como su configuración simplificada. Los datos de las configuraciones electrónicas pueden encontrarse en la web, en muchas páginas; se seleccionará la que permita entender su contenido sin complejidades y se verificará que la información sea verídica comparándola con otras fuentes. Los datos serán representados a través de un autómata finito, mientras que se usará la gramática libre de contexto para la programación. El programa se desarrollará en Python, utilizando la librería PLY para el análisis sintáctico de la gramática libre de contexto, lo que permitirá una implementación eficiente y precisa.


\subsection{\textbf{Recopilación de datos}}
Los datos necesarios para este proyecto serán las configuraciones electrónicas de los elementos químicos, las cuales se pueden encontrar en diversas fuentes, como libros de química, sitios web especializados y bases de datos. Se utilizará la tabla periódica de los elementos como referencia para la obtención de las configuraciones electrónicas. Se utilizará como guía para verificar y complementar la información recopilada de otras fuentes. Esto asegurará que las configuraciones electrónicas utilizadas en el programa estén respaldadas por una base sólida de conocimiento químico establecido.
\\
Revisando las diversas fuentes en Internet, se propuso hacer uso de la página \cite{Triplenlace}, donde se presenta de manera clara, ordenada y concisa todas las configuraciones, además de agregar un video explicativo sobre cómo se establecen.


\subsection{\textbf{Análisis de datos}}
El análisis de datos se realizará mediante el uso de autómatas finitos y gramáticas libres de contexto. Se utilizará un autómata finito para validar la sintaxis de la configuración electrónica ingresada por el usuario, y una gramática libre de contexto para obtener el elemento químico correspondiente y su configuración simplificada. El programa mostrará al usuario el  el elemento químico asociado a la configuración electrónica ingresada, junto con su configuración simplificada y permitirá realizar nuevos ingresos de cadenas,lo que brindará a los usuarios la flexibilidad para explorar diferentes configuraciones electrónicas y sus correspondientes elementos químicos.
\\
A continuación se presentan las configuraciones electrónicas de los 23 primeros elementos. Se selecciona sólo una muestra para representar cómo se analizan los datos y no hacer muy extenso el desarrollo, pero el proceso es el mismo para todos los elementos:

\begin{table}[hbt!]
\begin{center}
\caption{Configuraciones electrónicas de los 23 primeros elementos}
\begin{tabular}{cccll}
\hline
Número & Símbolo & Elemento & Configuración & Configuración simplificada\\ 
\hline
1 & H & Hidrógeno & 1s^1 & 1s^1 \\ 
2 & He & Helio &  1s^2 & 1s^2\\ 
3 & Li & Litio &  1s^2 2s^1 & [He] 2s^1\\
4 & Be & Berilio &  1s^2 2s^2 & [He] 2s^1\\
5 & B & Boro &  1s^2 2s^2 2p^1 & [He] 2s^2 2p^1\\
6 & C & Carbono &  1s^2 2s^2 2p^2 & [He] 2s^2 2p^2\\
7 & N & Nitrógeno &  1s^2 2s^2 2p^3 & [He] 2s^2 2p^3\\
8 & O & Oxígeno &  1s^2 2s^2 2p^4 & [He] 2s^2 2p^4\\
9 & F & Flúor &  1s^2 2s^2 2p^5 & [He] 2s^2 2p^5\\
10 & Ne & Neón &  1s^2 2s^2 2p^6 & [He] 2s^2 2p^6\\
11 & Na & Sodio &  1s^2 2s^2 2p^6 3s^1 & [Ne] 3s^1\\
\hline
\end{tabular}
\label{tab:elementos}
\end{center}
\end{table}

\begin{table}[hbt!]
\begin{center}
\begin{tabular}{cccll}
\hline
Número & Símbolo & Elemento & Configuración & Configuración simplificada\\ 
\hline
12 & Mg & Magnesio & 1s^2 2s^2 2p^6 3s^2 & [Ne] 3s^2 \\ 
13 & Al & Aluminio &  1s^2 2s^2 2p^6 3s^2 3p^1 & [Ne] 3s^2 3p^1\\ 
14 & Si & Silicio & 1s^2 2s^2 2p^6 3s^2 3p^2 & [Ne] 3s^2 3p^2\\
15 & P & Fósforo &  1s^2 2s^2 2p^6 3s^2 3p^3 & [Ne] 3s^2 3p^3\\
16 & S & Azufre &  1s^2 2s^2 2p^6 3s^2 3p^4 & [Ne] 3s^2 3p^4\\
17 & Cl & Cloro &  1s^2 2s^2 2p^6 3s^2 3p^5 & [Ne] 3s^2 3p^5\\
18 & Ar & Argón &  1s^2 2s^2 2p^6 3s^2 3p^6 & [Ne] 3s^2 3p^6\\
19 & K & Potasio &  1s^2 2s^2 2p^6 3s^2 3p^6 4s^1 & [Ar] 4s^1\\
20 & Ca & Calcio &  1s^2 2s2 2p^6 3s^2 3p^6 4s^2 & [Ar]  4s^2\\
21 & Sc & Escandio &  1s^2 2s^2 2p^6 3s^2 3p^6 4s^2 3d^1 & [Ar]  4s^2 3d^1\\
22 & Ti & Titanio &  1s^2 2s^2 2p^6 3s^2 3p^6 4s^2 3d^2 & [Ar]  4s^2 3d^2\\
23 & V & Vanadio &  1s^2 2s^2 2p^6 3s^2 3p^6 4s^2 3d^3 & [Ar]  4s^2 3d^3\\
\hline
\end{tabular}
\end{center}
\end{table}
Lo anterior se puede representar con un autómata finito, el cual se muestra posteriormente. Para el autómata sólo se realiza su presentación gráfica y se considera la misma cantidad de elementos del Cuadro \ref{tab:elementos}. El procedimiento para los demás elementos faltantes es el mismo.\\
En el autómata, S simboliza únicamente el estado inicial a partir del cúal se analizará si al ingresar una cadena se evalúa en q1 o q2. Asimismo, q1 representa al primer elemento (Hidrógeno), q2 al segundo elemento (Helio), y así consecutivamente hasta q23 que simboliza al elemento número 23 (Vanadio).

\begin{figure}[h]
\caption{Autómata finito de los 23 primeros elementos}
\centering
\includegraphics[width=0.7\textwidth]{Automata 23 elementos.png}
\end{figure}
\\
\newpage
A partir de ello, se consideran los 30 primeros elementos para construir la gramática descrita por: (para los demás elementos se sigue el mismo procedimiento)
\\
\begin{tabbing}
S ->  H | He | Li | Be | B | C | N | O | F | Ne | Na | Mg | Al | Si | P | S | Cl | Ar |  \\
K | Ca | Sc | Ti | V | Cr | Mn | Fe | Co | Ni | Cu | Zn \\
\end{tabbing}

\begin{tabbing}
\hspace*{8cm} \= \hspace*{8cm} \kill

Zn -> Ar 4s^2 3d^1^0  \> P -> Ne 3s^2 3p^3\\
Cu -> Ar 4s^1 3d^1^0  \> Si -> Ne 3s^2 3p^2\\
Ni -> Ar 4s^2 3d^8 \> Al -> Ne 3s^2 3p^1\\
Co -> Ar 4s^2 3d^7 \> Mg -> Ne 3s^2\\
Fe -> Ar 4s^2 3d^6 \> Na -> Ne 3s^1\\
Mn -> Ar 4s^2 3d^5 \> Ne -> He 2s^2 2p^6\\
Cr -> Ar 4s^1 3d^5 \> F -> He 2s^2 2p^5\\
V -> Ar 4s^2 3d^3 \> O -> He 2s^2 2p^4\\
Ti -> Ar 4s^2 3d^2 \> N -> He 2s^2 2p^3\\
Sc -> Ar 4s^2 3d^1 \> C -> He 2s^2 2p^2\\
Ca -> Ar 4s^2 \> B -> He 2s^2 2p^1\\
K -> Ar 4s^1 \> Be -> He 2s^2\\
Ar -> Ne 3s^2 3p^6 \> Li -> He 2s^1\\
Cl -> Ne 3s^2 3p^5 \> He -> 1s^2\\
S -> Ne 3s^2 3p^4 \> H -> 1s^1\\
\end{tabbing}

\\
Después de obtener la gramática libre de contexto se procede a la implementación del sistema, con el cual se podrá completar el cumplimiento de los objetivos planteados.

\newpage

\section{\large Objetivos}
\noindent \maskCitet{}\\

\subsection{Objetivo General} 
Aplicar autómatas finitos y gramáticas libres de contexto para identificar un elemento químico a través de su configuración electrónica.
\subsection{Objetivos Específicos}
\begin{itemize}
\item Usar autómatas finitos para representar la configuración electrónica de un elemento químico.
\item Emplear gramáticas libres de contexto a un elemento y conocer su configuración simplificada.
\item Programar gramáticas aplicadas a elementos químicos.
\end{itemize}

\newpage
% Referencias
\renewcommand\refname{\large\textbf{Referencias}}
\bibliography{mibibliografia}


\end{document}
